(function() {var implementors = {};
implementors["blake2"] = [{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"blake2/struct.Blake2bVarCore.html\" title=\"struct blake2::Blake2bVarCore\">Blake2bVarCore</a>","synthetic":false,"types":["blake2::Blake2bVarCore"]},{"text":"impl&lt;OutSize&gt; <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"blake2/struct.Blake2bMac.html\" title=\"struct blake2::Blake2bMac\">Blake2bMac</a>&lt;OutSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OutSize: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"typenum/generated/consts/type.U64.html\" title=\"type typenum::generated::consts::U64\">U64</a>&gt; + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"typenum/operator_aliases/type.LeEq.html\" title=\"type typenum::operator_aliases::LeEq\">LeEq</a>&lt;OutSize, <a class=\"type\" href=\"typenum/generated/consts/type.U64.html\" title=\"type typenum::generated::consts::U64\">U64</a>&gt;: <a class=\"trait\" href=\"typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,&nbsp;</span>","synthetic":false,"types":["blake2::Blake2bMac"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"blake2/struct.Blake2sVarCore.html\" title=\"struct blake2::Blake2sVarCore\">Blake2sVarCore</a>","synthetic":false,"types":["blake2::Blake2sVarCore"]},{"text":"impl&lt;OutSize&gt; <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"blake2/struct.Blake2sMac.html\" title=\"struct blake2::Blake2sMac\">Blake2sMac</a>&lt;OutSize&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;OutSize: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.61.0/std/primitive.u8.html\">u8</a>&gt; + <a class=\"trait\" href=\"typenum/type_operators/trait.IsLessOrEqual.html\" title=\"trait typenum::type_operators::IsLessOrEqual\">IsLessOrEqual</a>&lt;<a class=\"type\" href=\"typenum/generated/consts/type.U32.html\" title=\"type typenum::generated::consts::U32\">U32</a>&gt; + 'static,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"typenum/operator_aliases/type.LeEq.html\" title=\"type typenum::operator_aliases::LeEq\">LeEq</a>&lt;OutSize, <a class=\"type\" href=\"typenum/generated/consts/type.U32.html\" title=\"type typenum::generated::consts::U32\">U32</a>&gt;: <a class=\"trait\" href=\"typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,&nbsp;</span>","synthetic":false,"types":["blake2::Blake2sMac"]}];
implementors["crypto"] = [{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"crypto/hashes/blake2b/struct.Blake2b256.html\" title=\"struct crypto::hashes::blake2b::Blake2b256\">Blake2b256</a>","synthetic":false,"types":["crypto::hashes::blake2b::Blake2b256"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"crypto/hashes/blake2b/struct.Blake2b160.html\" title=\"struct crypto::hashes::blake2b::Blake2b160\">Blake2b160</a>","synthetic":false,"types":["crypto::hashes::blake2b::Blake2b160"]}];
implementors["hmac"] = [{"text":"impl&lt;D&gt; <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"hmac/struct.HmacCore.html\" title=\"struct hmac::HmacCore\">HmacCore</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: <a class=\"trait\" href=\"digest/core_api/wrapper/trait.CoreProxy.html\" title=\"trait digest::core_api::wrapper::CoreProxy\">CoreProxy</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;D::<a class=\"associatedtype\" href=\"digest/core_api/wrapper/trait.CoreProxy.html#associatedtype.Core\" title=\"type digest::core_api::wrapper::CoreProxy::Core\">Core</a>: <a class=\"trait\" href=\"digest/digest/trait.HashMarker.html\" title=\"trait digest::digest::HashMarker\">HashMarker</a> + <a class=\"trait\" href=\"digest/core_api/trait.UpdateCore.html\" title=\"trait digest::core_api::UpdateCore\">UpdateCore</a> + <a class=\"trait\" href=\"digest/core_api/trait.FixedOutputCore.html\" title=\"trait digest::core_api::FixedOutputCore\">FixedOutputCore</a> + <a class=\"trait\" href=\"digest/core_api/trait.BufferKindUser.html\" title=\"trait digest::core_api::BufferKindUser\">BufferKindUser</a>&lt;BufferKind = <a class=\"struct\" href=\"block_buffer/struct.Eager.html\" title=\"struct block_buffer::Eager\">Eager</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;D::<a class=\"associatedtype\" href=\"digest/core_api/wrapper/trait.CoreProxy.html#associatedtype.Core\" title=\"type digest::core_api::wrapper::CoreProxy::Core\">Core</a> as <a class=\"trait\" href=\"crypto_common/trait.BlockSizeUser.html\" title=\"trait crypto_common::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"crypto_common/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type crypto_common::BlockSizeUser::BlockSize\">BlockSize</a>: <a class=\"trait\" href=\"typenum/type_operators/trait.IsLess.html\" title=\"trait typenum::type_operators::IsLess\">IsLess</a>&lt;<a class=\"type\" href=\"typenum/generated/consts/type.U256.html\" title=\"type typenum::generated::consts::U256\">U256</a>&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"type\" href=\"typenum/operator_aliases/type.Le.html\" title=\"type typenum::operator_aliases::Le\">Le</a>&lt;&lt;D::<a class=\"associatedtype\" href=\"digest/core_api/wrapper/trait.CoreProxy.html#associatedtype.Core\" title=\"type digest::core_api::wrapper::CoreProxy::Core\">Core</a> as <a class=\"trait\" href=\"crypto_common/trait.BlockSizeUser.html\" title=\"trait crypto_common::BlockSizeUser\">BlockSizeUser</a>&gt;::<a class=\"associatedtype\" href=\"crypto_common/trait.BlockSizeUser.html#associatedtype.BlockSize\" title=\"type crypto_common::BlockSizeUser::BlockSize\">BlockSize</a>, <a class=\"type\" href=\"typenum/generated/consts/type.U256.html\" title=\"type typenum::generated::consts::U256\">U256</a>&gt;: <a class=\"trait\" href=\"typenum/marker_traits/trait.NonZero.html\" title=\"trait typenum::marker_traits::NonZero\">NonZero</a>,&nbsp;</span>","synthetic":false,"types":["hmac::optim::HmacCore"]},{"text":"impl&lt;D:&nbsp;<a class=\"trait\" href=\"digest/digest/trait.Digest.html\" title=\"trait digest::digest::Digest\">Digest</a> + <a class=\"trait\" href=\"crypto_common/trait.BlockSizeUser.html\" title=\"trait crypto_common::BlockSizeUser\">BlockSizeUser</a>&gt; <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"hmac/struct.SimpleHmac.html\" title=\"struct hmac::SimpleHmac\">SimpleHmac</a>&lt;D&gt;","synthetic":false,"types":["hmac::simple::SimpleHmac"]}];
implementors["sha2"] = [{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha2/struct.Sha256VarCore.html\" title=\"struct sha2::Sha256VarCore\">Sha256VarCore</a>","synthetic":false,"types":["sha2::core_api::Sha256VarCore"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha2/struct.Sha512VarCore.html\" title=\"struct sha2::Sha512VarCore\">Sha512VarCore</a>","synthetic":false,"types":["sha2::core_api::Sha512VarCore"]}];
implementors["sha3"] = [{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Keccak224Core.html\" title=\"struct sha3::Keccak224Core\">Keccak224Core</a>","synthetic":false,"types":["sha3::Keccak224Core"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Keccak256Core.html\" title=\"struct sha3::Keccak256Core\">Keccak256Core</a>","synthetic":false,"types":["sha3::Keccak256Core"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Keccak384Core.html\" title=\"struct sha3::Keccak384Core\">Keccak384Core</a>","synthetic":false,"types":["sha3::Keccak384Core"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Keccak512Core.html\" title=\"struct sha3::Keccak512Core\">Keccak512Core</a>","synthetic":false,"types":["sha3::Keccak512Core"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Keccak256FullCore.html\" title=\"struct sha3::Keccak256FullCore\">Keccak256FullCore</a>","synthetic":false,"types":["sha3::Keccak256FullCore"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Sha3_224Core.html\" title=\"struct sha3::Sha3_224Core\">Sha3_224Core</a>","synthetic":false,"types":["sha3::Sha3_224Core"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Sha3_256Core.html\" title=\"struct sha3::Sha3_256Core\">Sha3_256Core</a>","synthetic":false,"types":["sha3::Sha3_256Core"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Sha3_384Core.html\" title=\"struct sha3::Sha3_384Core\">Sha3_384Core</a>","synthetic":false,"types":["sha3::Sha3_384Core"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"sha3/struct.Sha3_512Core.html\" title=\"struct sha3::Sha3_512Core\">Sha3_512Core</a>","synthetic":false,"types":["sha3::Sha3_512Core"]}];
implementors["twox_hash"] = [{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"twox_hash/struct.XxHash32.html\" title=\"struct twox_hash::XxHash32\">XxHash32</a>","synthetic":false,"types":["twox_hash::thirty_two::XxHash32"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"twox_hash/struct.XxHash64.html\" title=\"struct twox_hash::XxHash64\">XxHash64</a>","synthetic":false,"types":["twox_hash::sixty_four::XxHash64"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"twox_hash/xxh3/struct.Hash64.html\" title=\"struct twox_hash::xxh3::Hash64\">Hash64</a>","synthetic":false,"types":["twox_hash::xxh3::Hash64"]},{"text":"impl <a class=\"trait\" href=\"crypto_common/trait.OutputSizeUser.html\" title=\"trait crypto_common::OutputSizeUser\">OutputSizeUser</a> for <a class=\"struct\" href=\"twox_hash/xxh3/struct.Hash128.html\" title=\"struct twox_hash::xxh3::Hash128\">Hash128</a>","synthetic":false,"types":["twox_hash::xxh3::Hash128"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()