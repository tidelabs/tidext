initSidebarItems({"attr":[["subxt",""]],"macro":[["rpc_params","Create some [`RpcParams`] to pass to our [`RpcClient`]. [`RpcParams`] simply enforces that parameters handed to our [`RpcClient`] methods are the correct shape."]],"mod":[["client","This module provides two clients that can be used to work with transactions, storage and events. The [`OfflineClient`] works entirely offline and can be passed to any function that doesnâ€™t require network access. The [`OnlineClient`] requires network access."],["config","This module provides a [`Config`] type, which is used to define various types that are important in order to speak to a particular chain. [`SubstrateConfig`] provides a default set of these types suitable for the default Substrate node implementation, and [`PolkadotConfig`] for a Polkadot node."],["constants","Types associated with accessing constants."],["dynamic","This module provides the entry points to create dynamic transactions, storage and constant lookups."],["error","Types representing the errors that can be returned."],["events","This module exposes the types and such necessary for working with events. The two main entry points into events are [`crate::OnlineClient::events()`] and calls like [crate::tx::TxProgress::wait_for_finalized_success()]."],["ext","Re-export external crates that are made use of in the subxt API."],["metadata","Types representing the metadata obtained from a node."],["rpc","RPC types and client for interacting with a substrate node."],["storage","Types associated with accessing and working with storage items."],["tx","Create signed or unsigned extrinsics."],["utils","Miscellaneous utility helpers."]],"struct":[["CallData","Decoded call data and associated type information."],["Decoder","Decoder"],["DecoderBuilder","Pallet name"],["Extrinsic","The result of successfully decoding an extrinsic."],["Metadata","A representation of the runtime metadata received from a node."],["OfflineClient","A client that is capable of performing offline-only operations. Can be constructed as long as you can populate the required fields."],["OnlineClient","A client that can be used to perform API calls (that is, either those requiriing an [`OfflineClientT`] or those requiring an [`OnlineClientT`])."],["PalletMetadata","Metadata for a specific pallet."],["PathKey","Path key"]]});