window.SIDEBAR_ITEMS = {"macro":[["rpc_params","Create some [`RpcParams`] to pass to our [`RpcClient`]. [`RpcParams`] simply enforces that parameters handed to our [`RpcClient`] methods are the correct shape."]],"mod":[["types","Types sent to/from the Substrate RPC interface."]],"struct":[["RawValue","Reference to a range of bytes encompassing a single valid JSON value in the input data."],["Rpc","Client for substrate rpc interfaces"],["RpcClient","A concrete wrapper around an [`RpcClientT`] which exposes the udnerlying interface via some higher level methods that make it a little easier to work with."],["RpcParams","This represents the parameters passed to an [`RpcClient`], and exists to enforce that parameters are provided in the correct format."],["RpcSubscription","The RPC subscription returned from [`RpcClientT`]’s `subscription` method."],["Subscription","A generic RPC Subscription. This implements [`Stream`], and so most of the functionality you’ll need to interact with it comes from the [`StreamExt`] extension trait."]],"trait":[["RpcClientT","Any RPC client which implements this can be used in our [`super::Rpc`] type to talk to a node."]],"type":[["RpcFuture","A boxed future that is returned from the [`RpcClientT`] methods."],["RpcSubscriptionId","The ID associated with the [`RpcClientT`]’s `subscription`."],["RpcSubscriptionStream","The inner subscription stream returned from our [`RpcClientT`]’s `subscription` method."]]};